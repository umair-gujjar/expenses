{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/raivo/expenses/public/js/app.js",
    "/home/raivo/expenses/public/js/controller/account.js",
    "/home/raivo/expenses/public/js/controller/cash.js",
    "/home/raivo/expenses/public/js/controller/entry.js",
    "/home/raivo/expenses/public/js/controller/vm/account_vm.js",
    "/home/raivo/expenses/public/js/controller/vm/entry_vm.js",
    "/home/raivo/expenses/public/js/lib/api.js",
    "/home/raivo/expenses/public/js/lib/date.js",
    "/home/raivo/expenses/public/js/lib/form_error.js",
    "/home/raivo/expenses/public/js/lib/handle_error.js",
    "/home/raivo/expenses/public/js/lib/money.js",
    "/home/raivo/expenses/public/js/lib/period.js",
    "/home/raivo/expenses/public/js/lib/spinner.js",
    "/home/raivo/expenses/public/js/lib/view.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\nvar cash = require('./controller/cash');\nvar entry = require('./controller/entry');\nvar account = require('./controller/account');\nvar view = require('./lib/view');\nvar period = require('./lib/period');\nvar money = require('./lib/money');\nvar date = require('./lib/date');\nvar handle_error = require('./lib/handle_error');\n\n// Errors binding.\n\nrequire('./lib/form_error');\n\nwindow.formatDate = function(unix) {\n\n    return date.format(unix);\n};\n\nwindow.formatAmount = function(amount) {\n\n    return money.format(amount);\n};\n\nroute(/^entries/, function() {\n\n    entry.list().catch(handle_error);\n});\n\nroute(/^expanded/, function() {\n\n    entry.expanded().catch(handle_error);\n});\n\nroute(/^entry\\/edit\\/([a-z0-9\\-]+)/, function(id) {\n\n    entry.edit(id).catch(handle_error);\n});\n\nroute(/^entry\\/copy\\/([a-z0-9\\-]+)/, function(id) {\n\n    entry.copy(id).catch(handle_error);\n});\n\nroute(/^entry\\/view\\/([a-z0-9\\-]+)/, function(id) {\n\n    entry.view(id).catch(handle_error);\n});\n\nroute(/^entry\\/add/, function() {\n\n    entry.add().catch(handle_error);\n});\n\nroute(/^accounts/, function() {\n\n    account.list().catch(handle_error);\n});\n\nroute(/^account\\/add/, function() {\n\n    account.add().catch(handle_error);\n});\n\nroute(/^account\\/edit\\/(.+)/, function(id) {\n\n    account.edit(id).catch(handle_error);\n});\n\nroute(/^account\\/(.+)\\/items/, function(id) {\n\n    account.items(id).catch(handle_error);\n});\n\nroute(/^cash/, function() {\n\n    cash.show().catch(handle_error);\n});\n\nvar helpTemplate = \"<h2>Help</h2>\\n<h3>Debit/credit effects</h3>\\n<table class=\\\"table\\\">\\n    <tr>\\n        <th>Type</th><th>Debit</th><th>Credit</th>\\n    </tr>\\n    <tr>\\n        <td>asset</td><td>+</td><td>-</td>\\n    </tr>\\n    <tr>\\n        <td>expense</td><td>+</td><td>-</td>\\n    </tr>\\n    <tr>\\n        <td>liability</td><td>-</td><td>+</td>\\n    </tr>\\n    <tr>\\n        <td>income</td><td>-</td><td>+</td>\\n    </tr>\\n    <tr>\\n        <td>equity</td><td>-</td><td>+</td>\\n    </tr>\\n</table>\\n\";\n\nroute(/^help/, function() {\n\n    view.show(helpTemplate, {});\n});\n\nroute(/.*/, function() {\n\n    route.go('entries');\n});\n\nvar periodForm = document.getElementById('period');\n\nko.applyBindings(period, periodForm);\n",
    "\nvar accountVM = require('./vm/account_vm');\nvar api = require('../lib/api');\nvar view = require('../lib/view');\nvar period = require('../lib/period');\n\nvar accountsTemplate = \"<h2>Accounts</h2>\\n<table class=\\\"table table-condensed\\\">\\n    <tr>\\n        <th>Code</th>\\n        <th>Name</th>\\n        <th>Type</th>\\n        <th>Entries</th>\\n    </tr>\\n    <tbody data-bind=\\\"foreach: accounts\\\">\\n        <tr>\\n            <td>\\n                <a data-bind=\\\"text: code, attr: { href: '#account/edit/' + $id }\\\" href=\\\"#\\\"></a>\\n            </td>\\n            <td data-bind=\\\"text: name\\\"></td>\\n            <td data-bind=\\\"text: type\\\"></td>\\n            <td>\\n                <a data-bind=\\\"attr: { href: '#account/' + $id + '/items' }\\\" href=\\\"#\\\">View</a>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<a class=\\\"btn btn-default hidden-print\\\" href=\\\"#account/add\\\" role=\\\"button\\\">\\n    <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n</a>\\n\";\n\n// Shows the list of accounts.\n\nexports.list = function() {\n\n    return api.account.all().then(function(accounts) {\n\n        return view.show(accountsTemplate, { accounts: accounts });\n    });\n};\n\nvar itemsTemplate = \"<h2>Account <span data-bind=\\\"text: account.code + ' - ' + account.name\\\"></span></h2>\\n<table class=\\\"table table-condensed\\\">\\n    <tr>\\n        <th>Date</th>\\n        <th>Title</th>\\n        <th>Item title</th>\\n        <th class=\\\"text-right\\\">Amount</th>\\n    </tr>\\n    <tbody data-bind=\\\"foreach: accounts\\\">\\n        <tr>\\n            <td data-bind=\\\"text: formatDate(date)\\\"></td>\\n            <td>\\n                <a data-bind=\\\"text: entry_title,\\n                    attr: { href: '#entry/view/' + entry_id }\\\" href=\\\"#\\\"></a>\\n            </td>\\n            <td data-bind=\\\"text: title\\\"></td>\\n            <td data-bind=\\\"text: formatAmount(effect)\\\" class=\\\"text-right\\\"></td>\\n        </tr>\\n    </tbody>\\n    <tr>\\n        <td></td>\\n        <td></td>\\n        <td></td>\\n        <td data-bind=\\\"text: formatAmount(total)\\\" class=\\\"text-right\\\"></td>\\n    </tr>\\n</table>\\n\";\n\n// Shows entry items for the given account.\n\nexports.items = function(id) {\n\n    var start = period.start(), end = period.end();\n\n    return api.account.items(id, start, end).then(function(accounts) {\n\n        return api.account.get(id).then(function(account) {\n\n            var total = 0;\n\n            accounts.forEach(function(account) {\n\n                total += account.effect;\n            });\n\n            return view.show(itemsTemplate, {\n\n                accounts: accounts,\n                account: account,\n                total: total\n            });\n        });\n    });\n};\n\nvar accountTemplate = \"<h2>Account</h2>\\n<form data-bind=\\\"submit: save\\\" class=\\\"form-horizontal\\\">\\n    <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">ID</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input data-bind=\\\"value: $id\\\"\\n                        type=\\\"text\\\" name=\\\"code\\\" title=\\\"Code\\\"\\n                        readonly=\\\"true\\\" class=\\\"form-control\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Code</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input data-bind=\\\"value: code\\\"\\n                        type=\\\"text\\\" name=\\\"code\\\" title=\\\"Code\\\"\\n                        placeholder=\\\"Code\\\" required=\\\"true\\\" class=\\\"form-control\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Name</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input data-bind=\\\"value: name\\\"\\n                        type=\\\"text\\\" name=\\\"name\\\" title=\\\"Name\\\"\\n                        placeholder=\\\"Name\\\" required=\\\"true\\\" class=\\\"form-control\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Type</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <select data-bind=\\\"options: types,\\n                        optionsCaption: 'Select type', value: type\\\"\\n                        required=\\\"true\\\" class=\\\"form-control\\\"></select>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n        <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n    </button>\\n    <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\" role=\\\"button\\\">\\n        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Delete\\n    </a>\\n    <a class=\\\"btn btn-default\\\" href=\\\"#accounts\\\" role=\\\"button\\\">\\n        <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Back\\n    </a>\\n</form>\";\n\n// Shows the new account form.\n\nexports.add = function() {\n\n    return view.show(accountTemplate, accountVM());\n};\n\n// Shows the account edit form for the given account.\n\nexports.edit = function(id) {\n\n    return api.account.get(id).then(function(data) {\n\n        return view.show(accountTemplate, accountVM(data));\n    });\n};\n",
    "\nvar api = require('../lib/api');\nvar view = require('../lib/view');\nvar period = require('../lib/period');\n\nvar cashTemplate = \"<h2>Cash flow</h2>\\n<table class=\\\"table table-condensed\\\">\\n    <tr>\\n        <th>Date</th>\\n        <th>Account</th>\\n        <th class=\\\"text-right\\\">Amount</th>\\n    </tr>\\n    <tbody data-bind=\\\"foreach: items\\\">\\n        <tr>\\n            <td data-bind=\\\"text: formatDate(date)\\\"></d>\\n            <td>\\n                <a data-bind=\\\"text: account.code + ' (' + account.name + ')', attr: { href: '#account/' + account.$id + '/items' }\\\" href=\\\"#\\\"></a>\\n            </td>\\n            <td data-bind=\\\"text: formatAmount(amount)\\\" class=\\\"text-right\\\"></td>\\n        </tr>\\n    </tbody>\\n</table>\\n<h3>Cash flow summary</h3>\\n<table class=\\\"table table-condensed\\\">\\n    <tr>\\n        <th>Account</th>\\n        <th class=\\\"text-right\\\">Amount</th>\\n    </tr>\\n    <tbody data-bind=\\\"foreach: summary\\\">\\n        <tr>\\n            <td>\\n                <a data-bind=\\\"text: account.code + ' (' + account.name + ')', attr: { href: '#account/' + account.$id + '/items' }\\\" href=\\\"#\\\"></a>\\n            </td>\\n            <td data-bind=\\\"text: formatAmount(amount)\\\" class=\\\"text-right\\\"></td>\\n        </tr>\\n    </tbody>\\n</table>\\n\";\n\nexports.show = function() {\n\n    var start = period.start(), end = period.end();\n\n    return api.cash.list(start, end).then(function(items) {\n\n        var summary = {};\n        var accounts = {};\n\n        items.forEach(function(item) {\n\n            var code = item.account.code;\n\n            accounts[code] = item.account;\n\n            summary[code] = (summary[code] || 0) + item.amount;\n        });\n\n        var sumList = Object.keys(summary).map(function(code) {\n\n            return { account: accounts[code], amount: summary[code] };\n        });\n\n        view.show(cashTemplate, { items: items, summary: sumList });\n    });\n};\n",
    "\nvar entryVM = require('./vm/entry_vm');\nvar api = require('../lib/api');\nvar view = require('../lib/view');\nvar period = require('../lib/period');\nvar handle_error = require('../lib/handle_error');\n\nvar entryTemplate = \"<h2 data-bind=\\\"text: (copy ? 'Edit copy' : 'Edit entry')\\\"></h2>\\n<form data-bind=\\\"submit: save\\\" class=\\\"form-horizontal\\\">\\n    <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">ID</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input data-bind=\\\"value: $id\\\"\\n                        type=\\\"text\\\" readonly=\\\"true\\\" class=\\\"form-control\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Title</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input data-bind=\\\"value: title\\\"\\n                        type=\\\"text\\\" name=\\\"title\\\" title=\\\"Title\\\" id=\\\"entry-title\\\"\\n                        placeholder=\\\"Title\\\" required=\\\"true\\\" class=\\\"form-control\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <h3>Items</h3>\\n    <div data-bind=\\\"foreach: items\\\" class=\\\"items\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-body\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-sm-2 control-label\\\">Item title</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <input data-bind=\\\"value: title\\\" type=\\\"text\\\"\\n                             class=\\\"form-control\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\" data-bind=\\\"errors: errors.date\\\">\\n                    <label class=\\\"col-sm-2 control-label\\\">Date</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <input data-bind=\\\"value: date\\\"\\n                            type=\\\"text\\\" pattern=\\\"\\\\d{2}\\\\.\\\\d{2}\\\\.\\\\d{4}\\\" name=\\\"date\\\" title=\\\"Date\\\"\\n                            placeholder=\\\"Date\\\" required=\\\"true\\\" class=\\\"form-control\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-sm-2 control-label\\\">Debit</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <select data-bind=\\\"options: $parent.accounts, value: debit,\\n                            optionsCaption: 'Select account', optionsText: $parent.accountText,\\n                            optionsValue: $parent.accountValue\\\"\\n                            required=\\\"true\\\" class=\\\"form-control\\\"></select>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-sm-2 control-label\\\">Credit</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <select data-bind=\\\"options: $parent.accounts, value: credit,\\n                            optionsCaption: 'Select account', optionsText: $parent.accountText,\\n                            optionsValue: $parent.accountValue\\\"\\n                            required=\\\"true\\\" class=\\\"form-control\\\"></select>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-sm-2 control-label\\\">Original currency</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <select data-bind=\\\"options: $parent.currencies,\\n                            optionsCaption: 'Select currency', value: currency\\\"\\n                            required=\\\"true\\\" class=\\\"form-control\\\"></select>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-sm-2 control-label\\\">Original amount</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <input data-bind=\\\"value: amount\\\" type=\\\"text\\\"\\n                            required=\\\"true\\\" pattern=\\\"\\\\d+(?:\\\\.(\\\\d{2}))?\\\" class=\\\"form-control\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-sm-2 control-label\\\">EUR amount</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <input data-bind=\\\"value: eur_amount\\\" type=\\\"text\\\"\\n                            required=\\\"true\\\" pattern=\\\"\\\\d+(?:\\\\.(\\\\d{2}))?\\\" class=\\\"form-control\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-sm-offset-2 col-sm-3\\\">\\n                        <a data-bind=\\\"click: $parent.removeItem\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\" role=\\\"button\\\">\\n                            <span class=\\\"glyphicon glyphicon-remove\\\"></span> Delete item\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">\\n        <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save\\n    </button>\\n    <a data-bind=\\\"click: addItem\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\" role=\\\"button\\\">\\n        <span class=\\\"glyphicon glyphicon-list\\\"></span> Add item\\n    </a>\\n    <a data-bind=\\\"click: remove\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\" role=\\\"button\\\">\\n        <span class=\\\"glyphicon glyphicon-remove\\\"></span> Delete\\n    </a>\\n    <a data-bind=\\\"attr: { href: $id ? '#entry/view/' + $id : '#entries' }\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\" role=\\\"button\\\">\\n        <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Back\\n    </a>\\n</form>\\n\";\n\nvar entryViewTemplate = \"<h2 data-bind=\\\"text: title\\\"></h2>\\n<h3>Items</h3>\\n<table class=\\\"table table-condensed\\\">\\n    <tr>\\n        <th>Date</th>\\n        <th>Debit</th>\\n        <th>Credit</th>\\n        <th class=\\\"text-right\\\">Original amount</th>\\n        <th>Currency</th>\\n        <th class=\\\"text-right\\\">EUR amount</th>\\n    </tr>\\n    <tbody data-bind=\\\"foreach: items\\\">\\n        <tr>\\n            <td data-bind=\\\"text: formatDate(date)\\\"></td>\\n            <td>\\n                <a data-bind=\\\"text: debit.code + ' (' + debit.name + ')',\\n                    attr: { href: '#account/' + debit.$id + '/items' }\\\" href=\\\"#\\\"></a>\\n            </td>\\n            <td>\\n                <a data-bind=\\\"text: credit.code + ' (' + credit.name + ')',\\n                    attr: { href: '#account/' + credit.$id + '/items' }\\\" href=\\\"#\\\"></a>\\n            </td>\\n            <td data-bind=\\\"text: formatAmount(amount)\\\" class=\\\"text-right\\\"></td>\\n            <td data-bind=\\\"text: currency.toUpperCase()\\\"></td>\\n            <td data-bind=\\\"text: formatAmount(eur_amount)\\\" class=\\\"text-right\\\"></td>\\n        </tr>\\n    </tbody>\\n</table>\\n<h3>Changes in balance</h3>\\n<table class=\\\"table table-condensed\\\">\\n    <tr>\\n        <th>Account</th>\\n        <th class=\\\"text-right\\\">Change</th>\\n    </tr>\\n    <tbody data-bind=\\\"foreach: changes\\\">\\n        <tr>\\n            <td>\\n                <a data-bind=\\\"text: account.code + ' (' + account.name + ')',\\n                    attr: { href: '#account/' + account.$id + '/items' }\\\" href=\\\"#\\\"></a>\\n            </td>\\n            <td data-bind=\\\"text: formatAmount(change)\\\" class=\\\"text-right\\\"></td>\\n        </tr>\\n    </tbody>\\n</table>\\n<a data-bind=\\\"attr: { href: '#entry/edit/' + $id }\\\"\\n    class=\\\"btn btn-default\\\" href=\\\"#\\\" role=\\\"button\\\">\\n    <span class=\\\"glyphicon glyphicon-edit\\\"></span> Edit\\n</a>\\n<a data-bind=\\\"click: copy\\\" class=\\\"btn btn-default\\\" href=\\\"#\\\" role=\\\"button\\\">\\n    <span class=\\\"glyphicon glyphicon-share\\\"></span> Copy\\n</a>\\n<a class=\\\"btn btn-default\\\" href=\\\"#entries\\\" role=\\\"button\\\">\\n    <span class=\\\"glyphicon glyphicon-arrow-left\\\"></span> Back\\n</a>\\n\";\n\n// Shows single entry.\n\nexports.view = function(id) {\n\n    return api.entry.full(id).then(function(data) {\n\n        data.items.forEach(function(item) {\n\n            item.debit = data.accounts[item.debit];\n            item.credit = data.accounts[item.credit];\n        });\n\n        data.changes = Object.keys(data.changes).map(function(key) {\n\n            return {\n                account: data.accounts[key],\n                change: data.changes[key]\n            };\n        });\n\n        // Handler for copying the entry.\n\n        data.copy = function() {\n\n            window.location.hash = '#entry/copy/' + id;\n        };\n\n        view.show(entryViewTemplate, data);\n    });\n};\n\nvar entriesTemplate = \"<h2>Entries</h2>\\n<p>\\n    All entries that have item with date in the selected period.\\n</p>\\n<table class=\\\"table table-condensed\\\">\\n    <tr>\\n        <th>Date</th>\\n        <th>Title</th>\\n    </tr>\\n    <tbody data-bind=\\\"foreach: entries\\\">\\n        <tr>\\n            <td data-bind=\\\"text: formatDate(date)\\\"></td>\\n            <td>\\n                <a data-bind=\\\"text: title, attr: { href: '#entry/view/' + $id }\\\" href=\\\"#\\\"></a>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<a class=\\\"btn btn-default hidden-print\\\" href=\\\"#entry/add\\\" role=\\\"button\\\">\\n    <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\n</a>\\n\";\n\n// Shows the list of entries.\n\nexports.list = function() {\n\n    var start = period.start(), end = period.end();\n\n    return api.entry.list(start, end).then(function(entries) {\n\n        view.show(entriesTemplate, { entries: entries });\n    });\n};\n\nvar expandedTemplate = \"<h2>Entries (expanded)</h2>\\n<p>\\n    All entries that have item with date in the selected period.\\n</p>\\n<table class=\\\"table table-condensed\\\">\\n    <tr>\\n        <th>Date</th>\\n        <th>Title</th>\\n        <th>Debit</th>\\n        <th>Credit</th>\\n        <th class=\\\"text-right\\\">Amount</th>\\n    </tr>\\n    <tbody data-bind=\\\"foreach: entries\\\">\\n        <tr>\\n            <td data-bind=\\\"text: formatDate(date)\\\"></td>\\n            <td>\\n                <strong><a data-bind=\\\"text: title, attr: { href: '#entry/view/' + $id }\\\" href=\\\"#\\\"></a></strong>\\n            </td>\\n            <td></td>\\n            <td></td>\\n            <td></td>\\n        </tr>\\n        <!-- ko foreach: items -->\\n            <tr>\\n                <td data-bind=\\\"text: formatDate(date)\\\"></td>\\n                <td data-bind=\\\"text: title\\\"></td>\\n                <td data-bind=\\\"text: debit.code + ' (' + debit.name + ')'\\\"></td>\\n                <td data-bind=\\\"text: credit.code + ' (' + credit.name + ')'\\\"></td>\\n                <td data-bind=\\\"text: formatAmount(eur_amount)\\\" class=\\\"text-right\\\"></td>\\n            </tr>\\n        <!-- /ko -->\\n    </tbody>\\n</table>\\n\";\n\n// Shows the list of expanded entries.\n\nexports.expanded = function() {\n\n    var start = period.start(), end = period.end();\n\n    return api.entry.list(start, end).then(function(entries) {\n\n        return api.account.all().then(function(accounts) {\n\n            var map = {};\n\n            accounts.forEach(function(account) {\n\n                map[account.$id] = account;\n            });\n\n            entries.forEach(function(entry) {\n\n                entry.items.forEach(function(item) {\n\n                    item.debit = map[item.debit];\n                    item.credit = map[item.credit];\n                });\n            });\n\n            view.show(expandedTemplate, { entries: entries });\n        });\n    });\n};\n\n// Shows the edit form for the entry.\n\nexports.edit = function(id) {\n\n    return api.entry.get(id).then(function(entry) {\n\n        return api.account.all().then(function(accounts) {\n\n            view.show(entryTemplate, entryVM(accounts, entry));\n\n            document.getElementById('entry-title').focus();\n        });\n    });\n};\n\n// Shows copy edit for the entry.\n\nexports.copy = function(id) {\n\n    return api.entry.get(id).then(function(entry) {\n\n        return api.account.all().then(function(accounts) {\n\n            // Unset entry id.\n\n            entry.$id = null;\n\n            view.show(entryTemplate, entryVM(accounts, entry, true));\n\n            document.getElementById('entry-title').focus();\n        });\n    });\n};\n\n// Shows the edit form for adding a new entry.\n\nexports.add = function(id) {\n\n    return api.account.all().then(function(accounts) {\n\n        view.show(entryTemplate, entryVM(accounts));\n\n        document.getElementById('entry-title').focus();\n    });\n};\n",
    "var view = require('../../lib/view');\nvar api = require('../../lib/api');\nvar handle_error = require('../../lib/handle_error');\n\nmodule.exports = function(data) {\n\n    var account = {\n\n        $id: null,\n        code: ko.observable(),\n        name: ko.observable(),\n        type: ko.observable(),\n        types: ['liability', 'income', 'equity',\n            'asset', 'expense', 'cash', 'bank']\n    };\n\n    if (data) {\n\n        account.$id = data.$id;\n        account.code(data.code);\n        account.name(data.name);\n        account.type(data.type);\n    }\n\n    account.toJS = function() {\n\n        return {\n\n            code: account.code(),\n            name: account.name(),\n            type: account.type()\n        };\n    };\n\n    account.toString = function() {\n\n        return account.code() + ' (' + account.name() + ')';\n    };\n\n    account.save = function() {\n\n        if (account.$id) {\n\n            api.account.update(account.$id, account.toJS()).then(function() {\n\n                window.location.hash = '#accounts';\n\n            }).catch(handle_error);\n\n        } else {\n\n            api.account.save(account.toJS()).then(function() {\n\n                window.location.hash = '#accounts';\n\n            }).catch(handle_error);\n        }\n\n        view.message('Account is saved.');\n    };\n\n    account.remove = function() {\n\n        if (account.$id) {\n\n            if (confirm('Delete the account?')) {\n\n                api.account.remove(account.$id).then(function(response) {\n\n                    window.location.hash = '#accounts';\n\n                }).catch(function(err) {\n\n                    view.message('Cannot delete the account. ' + err.message, 'alert-danger');\n                });\n            }\n        }\n    };\n\n    return account;\n};\n",
    "var money = require('../../lib/money');\nvar date = require('../../lib/date');\nvar view = require('../../lib/view');\nvar api = require('../../lib/api');\nvar period = require('../../lib/period');\nvar handle_error = require('../../lib/handle_error');\n\nmodule.exports = function(accounts, data, copy) {\n\n    var entry = {\n\n        title: ko.observable(),\n        $id: null,\n        items: ko.observableArray([]),\n        accounts: accounts,\n        currencies: ['EUR', 'USD', 'GBP'],\n        copy: copy\n    };\n\n    if (data) {\n\n        entry.$id = data.$id;\n        entry.title(data.title);\n\n        data.items.forEach(function(item) {\n\n            entry.items.push(itemVM(item));\n        });\n    }\n\n    entry.toJS = function() {\n\n        return {\n\n            title: entry.title(),\n            items: entry.items().map(function(item) {\n\n                return item.toJS();\n            })\n        };\n    };\n\n    entry.accountText = function(account) {\n\n        return account.code + ' (' + account.name + ')';\n    };\n\n    entry.accountValue = function(account) {\n\n        return account.$id;\n    };\n\n    function cleanErrors() {\n\n        entry.items().forEach(function(item) {\n\n            item.errors.date([]);\n        });\n    }\n\n    function validate() {\n\n        cleanErrors();\n\n        var years = [];\n\n        // Fresh entries can only be added to\n        // currently selected year.\n\n        entry.items().forEach(function(item) {\n\n            var d = new Date(date.parse(item.date()) * 1000);\n\n            var y = d.getUTCFullYear();\n\n            years.push(y);\n\n            if (y.toString() !== period.year() && !entry.$id) {\n\n                item.errors.date.push('Items can only be added to the currently selected year.');\n            }\n        });\n\n        var crossYear = false;\n\n        for (var i = 1; i < years.length; i++) {\n\n            if (years[i] !== years[i - 1]) {\n\n                crossYear = true;\n\n                break;\n            }\n        }\n\n        if (crossYear) {\n\n            entry.items().forEach(function(item) {\n\n                item.errors.date.push('Cross-year entries cannot be added.');\n            });\n        }\n\n        return !document.querySelector('form .exp-input-error');\n    };\n\n    entry.save = function() {\n\n        if (!validate()) {\n\n            return;\n        }\n\n        if (entry.$id) {\n\n            api.entry.update(entry.$id, entry.toJS()).then(function() {\n\n                window.location.hash = '#entry/view/' + entry.$id;\n\n            }).catch(handle_error);\n\n        } else {\n\n            api.entry.save(entry.toJS()).then(function(data) {\n\n                window.location.hash = '#entry/view/' + data;\n\n            }).catch(handle_error);\n        }\n\n        view.message('The entry is saved.');\n    };\n\n    entry.remove = function() {\n\n        if (entry.$id) {\n\n            if (confirm('Remove the entry?')) {\n\n                api.entry.remove(entry.$id).then(function() {\n\n                    window.location.hash = '#entries';\n\n                    view.message('The entry is deleted.');\n\n                }).catch(handle_error);\n            }\n        }\n    };\n\n    entry.addItem = function() {\n\n        var items = entry.items(), item = itemVM();\n\n        if (items.length > 0) {\n\n            // Set date automatically from last\n            // item date.\n\n            item.date(items[items.length - 1].date());\n        }\n\n        entry.items.push(item);\n    };\n\n    entry.removeItem = function(item) {\n\n        if (confirm('Remove the item ' + item.title() + '?')) {\n            \n            entry.items.remove(item).catch(handle_error);\n        }\n    };\n\n    return entry;\n};\n\nfunction itemVM(data) {\n\n    var item = {\n\n        title: ko.observable(),\n        date: ko.observable(),\n        debit: ko.observable(),\n        credit: ko.observable(),\n        currency: ko.observable(),\n        amount: ko.observable(),\n        eur_amount: ko.observable(),\n        errors: {\n            date: ko.observableArray([])\n        }\n    };\n\n    item.eur_orig = ko.computed(function() {\n\n        var amount = item.amount();\n        var currency = item.currency();\n\n        if (amount && currency === 'EUR') {\n\n            return amount;\n        }\n\n    });\n\n    item.eur_orig.subscribe(function(value) {\n\n        if (value) {\n\n            item.eur_amount(value);\n        }\n    });\n\n    if (data) {\n\n        item.title(data.title);\n        item.date(date.format(data.date));\n        item.debit(data.debit);\n        item.credit(data.credit);\n        item.amount(money.format(data.amount));\n        item.currency(data.currency.toUpperCase());\n        item.eur_amount(money.format(data.eur_amount));\n\n    } else {\n\n        item.date(date.format(Math.floor(Date.now() / 1000)));\n    }\n\n    item.toJS = function() {\n\n        return {\n\n            title: item.title(),\n            date: date.parse(item.date()),\n            debit: item.debit(),\n            credit: item.credit(),\n            amount: money.parse(item.amount()),\n            currency: item.currency().toLowerCase(),\n            eur_amount: money.parse(item.eur_amount())\n        };\n    };\n\n    return item;\n}\n",
    "var spinner = require('./spinner');\n\nvar showCount = 0;\n\nfunction spinnerShow() {\n\n    if (showCount === 0) {\n\n        spinner.show();\n    }\n\n    showCount += 1;\n}\n\nfunction spinnerHide() {\n\n    showCount -= 1;\n\n    if (showCount === 0) {\n\n        spinner.hide();\n    }\n}\n\nfunction fetchGet(url) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        headers: { 'Accept': 'application/json' }\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchDelete(url) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'DELETE',\n\n        headers: { 'Accept': 'application/json' }\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchSave(url, data) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'POST',\n\n        headers: {\n\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n\n        body: JSON.stringify(data)\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction fetchUpdate(url, data) {\n\n    spinnerShow();\n\n    return fetch(url, {\n\n        method: 'PUT',\n\n        headers: {\n\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n\n        body: JSON.stringify(data)\n\n    }).catch(function(err) {\n\n        spinnerHide();\n\n        throw err;\n\n    }).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n\n    spinnerHide();\n\n    return response.json().then(function(json) {\n\n        if (json.status === 'success') {\n\n            return json.data;\n\n        } else {\n\n            throw new Error('API response is not success: ' + json.message);\n        }\n    });\n}\n\nexports.entry = {\n\n    full: function(id) {\n\n        return fetchGet('/api/entry/' + encodeURIComponent(id) + '/full');\n    },\n\n    get: function(id) {\n\n        return fetchGet('/api/entry/' + encodeURIComponent(id));\n    },\n\n    list: function(start, end) {\n\n        var url = '/api/entries/' + encodeURIComponent(start) +\n            '/' + encodeURIComponent(end);\n\n        return fetchGet(url);\n    },\n\n    remove: function(id) {\n\n        return fetchDelete('/api/entry/' + encodeURIComponent(id));\n    },\n\n    update: function(id, data) {\n\n        return fetchUpdate('/api/entry/' + encodeURIComponent(id), data);\n    },\n\n    save: function(data) {\n\n        return fetchSave('/api/entry', data);\n    }\n};\n\nexports.account = {\n\n    all: function() {\n\n        return fetchGet('/api/accounts');\n    },\n\n    items: function(id, start, end) {\n\n        var url = '/api/account/' + encodeURIComponent(id) + '/items/' +\n            encodeURIComponent(start) + '/' + encodeURIComponent(end);\n\n        return fetchGet(url);\n    },\n\n    get: function(id) {\n\n        return fetchGet('/api/account/' + encodeURIComponent(id));\n    },\n\n    update: function(id, data) {\n\n        return fetchUpdate('/api/account/' + encodeURIComponent(id), data);\n    },\n\n    save: function(data) {\n\n        return fetchSave('/api/account', data);\n    },\n\n    remove: function(id) {\n\n        return fetchDelete('/api/account/' + encodeURIComponent(id));\n    }\n};\n\nexports.cash = {\n\n    list: function(start, end) {\n\n        var url = '/api/cash/' + encodeURIComponent(start) +\n            '/' + encodeURIComponent(end);\n\n        return fetchGet(url);\n    }\n};\n",
    "exports.parse = function(text) {\n\n    var match = text.match(/(\\d{2})\\.(\\d{2})\\.(\\d{4})/);\n\n    if (match) {\n\n        var monthDate = parseInt(match[1], 10);\n        var month = parseInt(match[2], 10) - 1;\n        var year = parseInt(match[3], 10);\n\n        var date = new Date();\n\n        date.setUTCHours(0, 0, 0, 0);\n        date.setUTCFullYear(year, month, monthDate);\n\n        return Math.floor(date.getTime() / 1000);\n\n    } else {\n\n        throw new Error('Cannot parse date ' + text);\n    }\n};\n\nexports.format = function(unix) {\n\n    var date = new Date(unix * 1000);\n\n    var year = date.getUTCFullYear();\n    var month = date.getUTCMonth() + 1;\n    var day = date.getUTCDate();\n\n    function pad(x) {\n\n        return x < 10 ? '0' + x : '' + x;\n    }\n\n    return pad(day) + '.' + pad(month) + '.' + year;\n};\n",
    "function setErrors(element, valueAccessor) {\n\n    var value = ko.unwrap(valueAccessor());\n\n    if (value.length > 0) {\n\n        var span = element.querySelector('.exp-input-error');\n\n        if (!span) {\n\n            // No existing error display.\n\n            if (!element.className.match(/has\\-error/)) {\n\n                element.className = element.className + ' has-error';\n            }\n\n            span = document.createElement('span');\n\n            span.className = 'help-block exp-input-error';\n\n            // Finds the holder element.\n\n            var holder = element.querySelector('.checkbox');\n\n            if (!holder) {\n\n                holder = element.querySelector('.form-control');\n            }\n\n            holder.parentNode.appendChild(span);\n        }\n\n        // Update errors display.\n\n        span.innerHTML = value.join(' ');\n\n    } else {\n\n        // Removes error class and messages.\n\n        element.className = element.className.replace(/has\\-error/, '');\n        element.className = element.className.replace(/\\s+/, ' ');\n\n        var error = element.querySelector('.exp-input-error');\n\n        if (error) {\n\n            error.parentNode.removeChild(error);\n        }\n    }\n}\n\n// Defines the errors binding.\n\nko.bindingHandlers.errors = {\n\n    init: function(element, valueAccessor) {\n\n        setErrors(element, valueAccessor);\n    },\n\n    update: function(element, valueAccessor, allBindings) {\n\n        setErrors(element, valueAccessor);\n    }\n};\n",
    "module.exports = function(err) {\n\n    console.log(err);\n    console.error(err.stack);\n};\n",
    "exports.parse = function(string) {\n\n    var match = string.match(/(\\d+)(?:\\.(\\d{2}))?/);\n\n    if (match) {\n\n        var integerPart = parseInt(match[1], 10);\n        var fractionalPart = 0;\n\n        if (match[2]) {\n\n            fractionalPart = parseInt(match[2], 10);\n        }\n\n        return integerPart * 100 + fractionalPart;\n\n    } else {\n\n        throw new Error('Cannot parse ' + string);\n    }\n};\n\nexports.format = function(value) {\n\n    var neg = false;\n\n    if (value < 0) {\n\n        neg = true;\n        value = -value;\n    }\n\n    var integerPart = Math.floor(value / 100);\n    var fractionalPart = value % 100;\n\n    return (neg ? '-' : '') + integerPart + '.' +\n        ((fractionalPart < 10 ? '0' : '') + fractionalPart);\n};\n",
    "exports.start_month = ko.observable();\nexports.end_month = ko.observable();\n\nexports.start = function() {\n\n    var month = exports.months.indexOf(exports.start_month());\n    var year = parseInt(exports.year(), 10);\n\n    var date = new Date();\n\n    date.setUTCFullYear(year, month, 1);\n    date.setUTCHours(0, 0, 0, 0);\n\n    return Math.floor(date.getTime() / 1000);\n};\n\nexports.end = function() {\n\n    var month = exports.months.indexOf(exports.end_month());\n    var year = parseInt(exports.year(), 10);\n\n    if (month === 11) {\n\n        month = 0;\n        year += 1;\n\n    } else {\n\n        month += 1;\n    }\n\n    var date = new Date();\n\n    date.setUTCFullYear(year, month, 1);\n    date.setUTCHours(0, 0, 0, 0);\n\n    // One day before start of the next month.\n\n    return Math.floor(date.getTime() / 1000) - 1;\n};\n\nexports.update = function() {\n\n    route.refresh();\n};\n\nvar currentDate = new Date();\nvar currentYear = currentDate.getUTCFullYear();\nvar currentMonth = currentDate.getUTCMonth();\n\nexports.months = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\n\nexports.year = ko.observable(currentYear.toString());\nexports.years = [];\n\nfor (var y = 2012; y <= currentYear + 1; y++) {\n\n    exports.years.push(y.toString());\n}\n\nexports.start_month(exports.months[currentMonth]);\nexports.end_month(exports.months[currentMonth]);\n",
    "exports.show = function() {\n\n    var spinner = document.getElementById('spinner');\n\n    if (!spinner) {\n\n        return;\n    }\n\n    spinner.style.display = 'block';\n};\n\nexports.hide = function() {\n\n    var spinner = document.getElementById('spinner');\n\n    if (!spinner) {\n\n        return;\n    }\n\n    spinner.style.display = 'none';\n};\n",
    "exports.show = kontainer.create('#content');\n\n// Shows informational message.\n\nexports.message = function(text, clazz) {\n\n    var messages = document.getElementById('messages');\n\n    var message = document.createElement('div');\n\n    var realClazz = 'alert';\n\n    if (clazz) {\n\n        realClazz += ' ' + clazz;\n\n    } else {\n\n        realClazz += ' alert-success';\n    }\n\n    message.className = realClazz;\n    message.innerHTML = text;\n\n    messages.appendChild(message);\n\n    setTimeout(function() {\n\n        messages.removeChild(message);\n\n    }, 2000);\n};\n"
  ]
}